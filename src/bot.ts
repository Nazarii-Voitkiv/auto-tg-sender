import { Telegraf } from "telegraf";
import dotenv from "dotenv";
import supabase from "./supabase";
import scheduler from "./scheduler";

dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN as string);

bot.start((ctx) => ctx.reply(
  "üëã –í—ñ—Ç–∞—é! –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n" +
  "/addmessage [—Ç–µ–∫—Å—Ç] - –¥–æ–¥–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n" +
  "/listmessages - –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n" +
  "/delmessage [id] - –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n" +
  "/addgroup [id] - –¥–æ–¥–∞—Ç–∏ –≥—Ä—É–ø—É\n" +
  "/listgroups - –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –≥—Ä—É–ø–∏\n" +
  "/delgroup [id] - –≤–∏–¥–∞–ª–∏—Ç–∏ –≥—Ä—É–ø—É\n" +
  "/setinterval [min] [max] - –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä–≤–∞–ª —Ä–æ–∑—Å–∏–ª–∫–∏\n" +
  "/pause - –ø—Ä–∏–∑—É–ø–∏–Ω–∏—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—É\n" +
  "/resume - –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—É\n" +
  "/stats - –ø–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
));

// –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
bot.command("addmessage", async (ctx) => {
  const text = ctx.message.text.split("/addmessage ")[1];
  if (!text) return ctx.reply("‚ùå –í–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!");

  const { error } = await supabase
    .from("messages")
    .insert([{ text, created_at: new Date() }]);

  if (error) return ctx.reply("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!");
  ctx.reply("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ–¥–∞–Ω–æ!");
});

// –°–ø–∏—Å–æ–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
bot.command("listmessages", async (ctx) => {
  const { data: messages, error } = await supabase
    .from("messages")
    .select("*");

  if (error || !messages.length) {
    return ctx.reply("‚ùå –ù–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å");
  }

  const messageList = messages
    .map(m => `ID: ${m.id}\n${m.text}\n---`)
    .join("\n");
  
  ctx.reply(`üìù –ó–±–µ—Ä–µ–∂–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n\n${messageList}`);
});

// –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∫–æ—é
bot.command("pause", (ctx) => {
  scheduler.pause();
  ctx.reply("‚è∏Ô∏è –†–æ–∑—Å–∏–ª–∫—É –ø—Ä–∏–∑—É–ø–∏–Ω–µ–Ω–æ");
});

bot.command("resume", (ctx) => {
  scheduler.resume();
  ctx.reply("‚ñ∂Ô∏è –†–æ–∑—Å–∏–ª–∫—É –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ");
});

bot.command("setinterval", (ctx) => {
  const [min, max] = ctx.message.text
    .split("/setinterval ")[1]
    .split(" ")
    .map(Number);

  if (!min || !max || min >= max) {
    return ctx.reply("‚ùå –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /setinterval [min] [max]");
  }

  scheduler.setInterval(min, max);
  ctx.reply(`‚è±Ô∏è –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${min}-${max} —Ö–≤–∏–ª–∏–Ω`);
});

bot.launch();
console.log("ü§ñ –ë–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω–æ!");